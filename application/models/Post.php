<?php

class Post extends CI_Model
{


    public function updateYourPost($id, $title, $content)
    {
        $update = "UPDATE posts SET title = '$title' , content= '$content' WHERE id = $id ";
        return $this->db->query($update);

/*

        $data = array(
            'title' => $title,
            'content' => $content
        );

        $this->db->where('id', $id);
        $this->db->update('posts', $data);*/
        $sql = "UPDATE posts SET title='$title' , content ='$content' WHERE id='$id'";
        return $sql;

    }

    public function accountinfo($username)
    {
        return $this->db->get_where('posts', array('membername' => $username))->result();

    }

    public function getpostwithtitle($title)
    {
        $data = $this->db->get_where('posts', array('title' => $title))->row('id');
        return $data;

    }
    public function getpostwithid($id)
    {
        $data = $this->db->get_where('posts', array('id' => $id))->row();
        return $data;

    }

    public function getPostByUrl($url)
    {
        return $this->db->get_where('posts', array('url' => $url))->row();

    }

    public function getlike($url)
    {
        return $this->db->like('posts', array('url' => $url))->result();
    }

    public function getmyposts($username)
    {
        $data = $this->db->get_where('posts', array('membername' => $username))->result();
        return $data;
    }

    public function deletemyaccount($username)
    {
        $this->db->delete('member', array('membername' => $username));
    }

    public function editposts($membername)
    {
        $this->db->get_where('member', array('membername' => $membername))->result();

        $this->db->where('membername', $membername);
        $this->db->update('member', array('password' => $newpassword));

    }

    public function newmembercreate($username, $password, $email)
    {
        $img = 'img/' . $username;
        $createmember = "insert into member() values('','$username','$password','$email','0','$img')";
        $this->db->query($createmember);
    }

    public function getdata()
    {
        $select = $this->db->get('posts')->result();
        return $select;
        //return parent::__get($key); // TODO: Change the autogenerated stub
    }

    public function kisi_yazdir($kisi_id)
    {

        $select = $this->db->where("id", $kisi_id)->get("member")->result();
        return ($select);

    }

    public function getmembers()
    {
        $members = $this->db->get('member')->result();
        return $members;


    }

    public function Insertsubmissions($title, $content, $senddate, $membername, $about, $img)
    {
        $submissions = "insert into posts() values('','$title','$content','$senddate','$membername','$about','$img')";
        $this->db->query($submissions);


    }

    public function getmessages()
    {

        $messages = $this->db->get("messages")->result();
        return $messages;
    }

    function Insert($title, $content, $reciver)
    {

        $data = array(
            'title' => $title,
            'content' => $content,
            'sender' => 'mustafa',
            'reciver' => $reciver,
            'date' => getdate(),

        );

        $query = $this->db->insert('messagebox', $data);


    }

    /**
     * This method checks login information
     * @param $membername
     * @param $password
     * @return mixed
     */
    public function login($membername, $password)
    {
        $query = $this->db->get_where('users', array('membername' => $membername, 'password' => $password));
        return $query->row_array();
    }

    public function form_insert($data)
    {
        $this->db->insert('messagebox', $data);
    }

    public function saverecords($title, $subject, $sender, $rec, $date)
    {

        $query = "insert into messages() values('','$title','$subject','$sender','$rec','$date')";
        $this->db->query($query);
    }

    public function deleteposts($id, $membername)
    {

        $this->db->where('membername', $membername);
        $this->db->where('id', $id);
        $this->db->delete('posts');


    }

    public function changeuserpassword($username, $password, $newpassword)
    {

        $currentpass = $this->db->get_where('member', array('membername' => $username))->row('password');


        if ($password == $currentpass)//Newpassword == Current Password
        {
            $this->db->where('membername', $username);
            $this->db->update('member', array('password' => $newpassword));
        }

    }
}
